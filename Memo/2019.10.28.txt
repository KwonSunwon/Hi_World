
	STRING( const STRING& other ) : len { other.len }
	{
		p = new char[ len ];
		// 깊은 복사를 해야 dangling pointer가 안 만들어 진다
		memcpy( p, other.p, len );
	}


	STRING( const STRING& other )
	{
		len = strlen( other.p );
		p = new char[ len ];
		// 깊은 복사를 해야 dangling pointer가 안 만들어 진다
		memcpy( p, other.p, len );
	}

// strlen - const char* 형의 길이 출력
// 복사된 p는 char* 이어서




~~ : len { other.len } ~~ {~~}// 생성자에서만 가능한 문법



STRING& operator+( const STRING& rhs ) const
	{
		STRING res;
		res.len = len + rhs.len;
		res.p = new char[ res.len ];
		
		memcpy( res.p, p, len );
		memcpy( res.p + len, rhs.p, rhs.len );

		return res;		// 이거 오류 확인 --> 첫 줄 STRING& -> STRING
	}				// 이 안에서는 res가 리턴 되고 res가 임시기때문에
					// 사라지는데 &가 진짜 값을 가져오려고 하기때문에
					// 이미 사라져있는 것을 가져오려고 해서 오류남


int main(){
	~~
	string c = a + b;
	~~
}
오류
