//-----------------------------------------------------------------------------
// 2019. 9. 2 월 C++                           월56수34          (1주 1일)
//
// 강의 소개
// Save 기능 만들기
//-----------------------------------------------------------------------------
#include <fstream>
#include <iostream>

int main()
{
	std::ifstream in ("소스.cpp");
	std::ofstream out ("2019 C++ 수업록.txt", std::ios::app);

	int c;
	
	while ((c = in.get())!= EOF)
	{
		out.put(c);
	}
}


----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// Save 기능 만들기
//	- 
//	- save 파일을 분히하기
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------
#include <fstream>
#include <iostream>

void save( char const* fname )		// 함수의 선언문 (Function Declaration)
{
	std::ifstream in(fname);
	std::ofstream out("2019 C++ 수업록.txt", std::ios::app);

	out << "\n\n\n";
	out << "----------------------------------------------------------------------------" << std::endl;

	int c;
	while ((c = in.get()) != EOF)
		out.put(c);
}

int main ()
{
	save("소스.cpp");
}


----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// Save 기능 만들기
//	- 
//	- save 파일을 분히하기
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------
#include <fstream>
#include <iostream>

void save( char const* fname )		// 함수의 선언문 (Function Declaration)
{
	std::ifstream in(fname);
	std::ofstream out("2019 C++ 수업록.txt", std::ios::app);

	out << "\n\n\n";
	out << "----------------------------------------------------------------------------" << std::endl;

	int c;
	while ((c = in.get()) != EOF)
		out.put(c);
}

int main ()
{
	save("소스.cpp");
}


----------------------------------------------------------------------------
Wed Sep  4 12:16:57 2019
----------------------------------------------------------------------------



//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// Save 기능 만들기
//	- save를 함수로 만들기
//	- save한 시간을 기록하기 ---> 시간을 한글로 적을 수 있겠니? (추가)
//	- save 파일을 분리하기
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------
#include <fstream>
#include <iostream>
#include <chrono>
#pragma warning(disable:4996)

void save( char const* fname )		// 함수의 선언문 (Function Declaration)
{
	std::ifstream in(fname);
	std::ofstream out("2019 C++ 수업록.txt", std::ios::app);

	// 저장하는 시점의 시간값을 얻어오자
	auto now = std::chrono::system_clock::now();
	auto time = std::chrono::system_clock::to_time_t(now);
	std::cout << ctime(&time) << std::endl;



	out << "\n\n\n";
	out << "----------------------------------------------------------------------------" << std::endl;
	out << ctime(&time);	// 저장된 시간을 기록한다
	out << "----------------------------------------------------------------------------" << std::endl;
	out << "\n\n\n";

	int c;
	while ((c = in.get()) != EOF)
		out.put(c);
}

int main ()
{
	save("소스.cpp");
}


----------------------------------------------------------------------------
Wed Sep  4 12:18:41 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// Save 기능 만들기
//	- save를 함수로 만들기
//	- save한 시간을 기록하기 ---> 시간을 한글로 적을 수 있겠니? (추가)
//	- save 파일을 분리하기
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------
#include <fstream>
#include <iostream>
#include <chrono>
#pragma warning(disable:4996)

void save( char const* fname )		// 함수의 선언문 (Function Declaration)
{
	std::ifstream in(fname);
	std::ofstream out("2019 C++ 수업록.txt", std::ios::app);

	// 저장하는 시점의 시간값을 얻어오자
	auto now = std::chrono::system_clock::now();
	auto time = std::chrono::system_clock::to_time_t(now);
	std::cout << ctime(&time) << std::endl;



	out << "\n\n\n";
	out << "----------------------------------------------------------------------------" << std::endl;
	out << ctime(&time);	// 저장된 시간을 기록한다
	out << "----------------------------------------------------------------------------" << std::endl;
	out << "\n\n";

	int c;
	while ((c = in.get()) != EOF)
		out.put(c);
}

int main ()
{
	save("소스.cpp");
}


----------------------------------------------------------------------------
Wed Sep  4 12:38:55 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// Save 기능 만들기
//	- save를 함수로 만들기
//	- save한 시간을 기록하기 ---> 시간을 한글로 적을 수 있겠니? (추가)
//	- save 파일을 분리하기
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------

#include "save.h"

int main ()
{
	save("소스.cpp");
}




----------------------------------------------------------------------------
Wed Sep  4 12:49:53 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 강의 내용을 저장하기 위한 save 파일 선언
// 2019. 9. 4. 수요일                                          작성자:Sunwon
//-----------------------------------------------------------------------------
#pragma once

void save(char const* fname);		// 함수의 선언문 (Function Declaration)


----------------------------------------------------------------------------
Wed Sep  4 12:49:53 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 강의 내용을 저장하기 위한 save 파일 선언
// 2019. 9. 4. 수요일                                          작성자:Sunwon
//-----------------------------------------------------------------------------

#include <fstream>
#include <iostream>
#include <chrono>
#pragma warning(disable:4996)
//-----------------------------------------------------------------------------
void save(char const* fname)
//-----------------------------------------------------------------------------
{
	std::ifstream in(fname);
	std::ofstream out("2019 C++ 수업록.txt", std::ios::app);

	// 저장하는 시점의 시간값을 얻어오자
	auto now = std::chrono::system_clock::now();
	auto time = std::chrono::system_clock::to_time_t(now);
	std::cout << ctime(&time) << std::endl;

	out << "\n\n\n";
	out << "----------------------------------------------------------------------------" << std::endl;
	out << ctime(&time);	// 저장된 시간을 기록한다
	out << "----------------------------------------------------------------------------" << std::endl;
	out << "\n\n";

	int c;
	while ((c = in.get()) != EOF)
		out.put(c);
}


----------------------------------------------------------------------------
Wed Sep  4 12:49:53 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// Save 완성 - 파일을 분리하기까지
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------

#include "save.h"

int main ()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}




----------------------------------------------------------------------------
Wed Sep  4 13:03:35 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// C++ I/O
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"

// C++ 실행파일은 
// cin, cout, cerr, clog 객체를 자동으로 생성한다

int main ()
{
	std::cout << "이름을 알려주세요 : ";
	std::string name;
	std::cin >> name;
	std::cout << "안녕하세요?" << name << "님. 반갑습니다." << std::endl;
	std::cerr << "에러는 이쪽에 저장됩니다." << std::endl;
	std::clog << "로그는 여기로 흘러갑니다." << std::endl;

	save("소스.cpp");
}




----------------------------------------------------------------------------
Wed Sep  4 13:09:18 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// C++ I/O
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"

// C++ 실행파일은 
// cin, cout, cerr, clog 객체를 자동으로 생성한다

int main ()
{
	std::cout << "이름을 알려주세요 : ";
	std::string name;
	std::cin >> name;
	std::cout << "안녕하세요?" << name << "님. 반갑습니다." << std::endl;
	std::cerr << "에러는 이쪽에 저장됩니다." << std::endl;
	std::clog << "로그는 여기로 흘러갑니다." << std::endl;

	save("소스.cpp");
}




----------------------------------------------------------------------------
Wed Sep  4 13:16:31 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// C++ I/O
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"

// [문제] 몇 단인지 물어봐서 그 단에 해당하는 구구단을 출력하라.
// 2 ~ 9 단까지만 출력해야 한다. 다른 숫자는 잘못되었다고 알려주고 다시 입력받아라.

int main ()
{
	int dan;
	std::cout << "몇 단인지 입력해 주세요. : ";
	std::cin >> dan;

	save("소스.cpp");;
}



----------------------------------------------------------------------------
Wed Sep  4 14:58:44 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 4 월 C++                           월56수34          (1주 2일)
//
// C++ I/O
//
// 과제 
//	- C++함수 공부하기
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"

// [문제] 몇 단인지 물어봐서 그 단에 해당하는 구구단을 출력하라.
// 2 ~ 9 단까지만 출력해야 한다. 다른 숫자는 잘못되었다고 알려주고 다시 입력받아라.

int main()
{
	int dan;
	std::cout << "몇 단인지 입력해 주세요. : ";
	while (1)
	{
		std::cin >> dan;
		if (dan > 1 && dan < 10)
			break;
		std::cout << "2 ~ 9 사이의 값을 입력해 주세요.";
		std::cout << "다시 입력해 주세요. : ";
	}
	
	for (int i = 1; i < 10; ++i)
		std::cout << dan << "*" << i << "=" << (dan*i) << "\n";


	save("소스.cpp");
}



----------------------------------------------------------------------------
Mon Sep  9 13:59:06 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// C++ I/O
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"

using std::cout;
using std::endl;
using std::cin;

int main()
{
	save( "소스.cpp" );

	cout << "구구단을 출력합니다." << endl;

	while( true )
	{
		int dan;
		cout << "몇 단인지 입력해 주세요. : ";
		cin >> dan;

		if( dan > 1 && dan < 10 )
		{
			for( int i = 1; i < 10; ++i )
				cout << dan << "*" << i << "=" << ( dan*i ) << endl;
		}
		else
			cout << "2~9단 까지만 입력하세요." << endl;
	}

}


----------------------------------------------------------------------------
Mon Sep  9 13:59:43 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// C++ I/O
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"

using namespace std;

int main()
{
	save( "소스.cpp" );

	cout << "구구단을 출력합니다." << endl;

	while( true )
	{
		int dan;
		cout << "몇 단인지 입력해 주세요. : ";
		cin >> dan;

		if( dan > 1 && dan < 10 )
		{
			for( int i = 1; i < 10; ++i )
				cout << dan << "*" << i << "=" << ( dan*i ) << endl;
		}
		else
			cout << "2~9단 까지만 입력하세요." << endl;
	}

}


----------------------------------------------------------------------------
Mon Sep  9 14:20:29 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

int main()
{
	char			c;							// token : 의미를 가지는 최소단위
	//메모리크기		메모리에 엑세스하는 이름
	int		i;
	float	f;
	double	d;

	c = 1;						// 쓰기연산 (assignement)
	cout << static_cast<int>(c) << endl;		// 형변환

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep  9 14:33:47 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

int main()
{
	// [문제] c의 크기를 출력하라
	char c;
	cout << sizeof( c );

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep  9 14:34:47 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

int main()
{
	// [문제] c의 크기를 출력하라
	char c;
	cout << "char c 의 크기는 " << sizeof( c ) << " byte입니다." << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep  9 14:35:49 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

int main()
{
	// [문제] int는 몇 바이트입니까?

	cout << "int 의 크기는 " << sizeof( int ) << " byte입니다." << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep  9 14:50:40 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <limits>
#include "save.h"
using namespace std;

// int d; 라는 문장에서
// 앞의 'int'는 'data type'이라고 한다.
// 대부분의 언어에서는 미리 정한 메모리 크기를 data type으로 제공한다.
// 크기는 1, 2, 4, 8 바이트이다.
// --- 미리 정해진 타입은 'POD(Plain Old Date) type'이라고 부른다.
// 그 이상의 메모리는 사용자가 date type을 직접 정할 수 있다.

int main()
{
	// [문제] int의 최댓값과 최솟값을 출력하라.
	
	cout << "최솟값 " << numeric_limits<int>::min() << endl;
	cout << "최댓값 " << numeric_limits<int>::max() << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep  9 14:54:54 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <limits>
#include "save.h"
using namespace std;

// int d; 라는 문장에서
// 앞의 'int'는 'data type'이라고 한다.
// 대부분의 언어에서는 미리 정한 메모리 크기를 data type으로 제공한다.
// 크기는 1, 2, 4, 8 바이트이다.
// --- 미리 정해진 타입은 'POD(Plain Old Date) type'이라고 부른다.
// 그 이상의 메모리는 사용자가 date type을 직접 정할 수 있다.

int main()
{
	// [문제] int의 최댓값과 최솟값을 출력하라.
	
	cout << "최솟값 " << numeric_limits<int>::min() << endl;
	cout << "최댓값 " << numeric_limits<int>::max() << endl;

	int i = 0x7FFFFFFF;		// 01111111 11111111 11111111 11111111
	cout << i << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep  9 14:55:20 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <limits>
#include "save.h"
using namespace std;

// int d; 라는 문장에서
// 앞의 'int'는 'data type'이라고 한다.
// 대부분의 언어에서는 미리 정한 메모리 크기를 data type으로 제공한다.
// 크기는 1, 2, 4, 8 바이트이다.
// --- 미리 정해진 타입은 'POD(Plain Old Date) type'이라고 부른다.
// 그 이상의 메모리는 사용자가 date type을 직접 정할 수 있다.

int main()
{
	// [문제] int의 최댓값과 최솟값을 출력하라.
	
	cout << "최솟값 " << numeric_limits<int>::min() << endl;
	cout << "최댓값 " << numeric_limits<int>::max() << endl;

	int i = 0x7FFFFFFF;		// 01111111 11111111 11111111 11111111
	cout << i << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep  9 14:56:18 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 변수
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <limits>
#include "save.h"
using namespace std;

// int d; 라는 문장에서
// 앞의 'int'는 'data type'이라고 한다.
// 대부분의 언어에서는 미리 정한 메모리 크기를 data type으로 제공한다.
// 크기는 1, 2, 4, 8 바이트이다.
// --- 미리 정해진 타입은 'POD(Plain Old Date) type'이라고 부른다.
// 그 이상의 메모리는 사용자가 date type을 직접 정할 수 있다.

int main()
{
	// [문제] int의 최댓값과 최솟값을 출력하라.
	
	cout << "최솟값 " << numeric_limits<int>::min() << endl;
	cout << "최댓값 " << numeric_limits<int>::max() << endl;

	int i = 0x7FFFFFFF;		// 01111111 11111111 11111111 11111111
	cout << i << endl;		// 0x80000000;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep  9 15:11:50 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <time.h>
#include "save.h"
using namespace std;


int main()
{
	save( "소스.cpp" );
	// 아무키나 누르면 주사위 숫자를 출력하세요.
	while( true )
	{
		srand( ( unsigned ) time( NULL ) );
		cout << "아무 키나 누르면 주사위를 던집니다.";
		char c;
		cin >> c;
		cout << ( rand() % 6 ) + 1 << endl;
	}
}


----------------------------------------------------------------------------
Mon Sep  9 15:14:29 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <random>
#include "save.h"
using namespace std;

// C++ 랜덤값 생성
// 랜덤 엔진으로 랜덤값 생성
// 확률 분포로 원하는 통계특성 설정

int main()
{
	save( "소스.cpp" );

	mt19937 eng;
	
	for( int i = 0; i < 10; ++i )
		cout << eng() << endl;
}


----------------------------------------------------------------------------
Mon Sep  9 15:15:47 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <random>
#include "save.h"
using namespace std;

// C++ 랜덤값 생성
// 랜덤 엔진으로 랜덤값 생성
// 확률 분포로 원하는 통계특성 설정

int main()
{
	save( "소스.cpp" );

	random_device rd;
	mt19937 eng { rd() };

	for( int i = 0; i < 10; ++i )
		cout << eng() << endl;
}


----------------------------------------------------------------------------
Mon Sep  9 15:20:33 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 9 월 C++                           월56수34          (2주 1일)
//
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <random>
#include "save.h"
using namespace std;

// C++ 랜덤값 생성
// 랜덤 엔진으로 랜덤값 생성
// 확률 분포로 원하는 통계특성 설정

int main()
{
	save( "소스.cpp" );

	random_device rd;
	mt19937 eng { rd() };
	uniform_int_distribution<int> uid( 1, 6 );

	for( int i = 0; i < 10; ++i )
		cout << eng() << endl;
}


----------------------------------------------------------------------------
Wed Sep 11 11:39:51 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <random>
#include "save.h"
using namespace std;

int main()
{	
	save( "소스.cpp" );

	// 주사위 수 생성
	default_random_engine dre;
	uniform_int_distribution<> uid( 1, 6 );

	while( true )
	{
		cout << uid( dre ) << endl;
	}

}


----------------------------------------------------------------------------
Wed Sep 11 11:40:57 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <thread>
#include "save.h"
using namespace std;

int main()
{	
	save( "소스.cpp" );

	// 주사위 수 생성
	default_random_engine dre;
	uniform_int_distribution<> uid( 1, 6 );

	while( true )
	{
		this_thread::sleep_for( 1s );
		cout << uid( dre ) << endl;
	}

}


----------------------------------------------------------------------------
Wed Sep 11 11:42:41 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 랜덤 넘버 생성 방법
//-----------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <thread>
#include "save.h"
using namespace std;

int main()
{	
	save( "소스.cpp" );

	// 주사위 수 생성
	default_random_engine dre;
	uniform_int_distribution<> uid( 1, 6 );

	while( true )
	{
		this_thread::sleep_for( 1s );	// 1초에 한번씩 작동
		cout << uid( dre ) << endl;
	}

}


----------------------------------------------------------------------------
Wed Sep 11 11:49:08 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 변수 초기화 - uniform initialization
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

int main()
{	
	// 초기화란 메모리가 확보될때 설정값을 쓰는 동작이다.
	int d;		// int라는 크기만큼 메모리를 할당한 후 그 메모리에 접근할 때 d라는 이름을 사용하겠다는 선언


	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 11 11:54:55 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 변수 초기화 - uniform initializtion
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

int main()
{	
	// 초기화란 메모리가 확보될때 설정값을 쓰는 동작이다.
	int a;				// int라는 크기만큼 메모리를 할당한 후 그 메모리에 접근할 때 a라는 이름을 사용하겠다는 선언
	int b = 0;			// 명시적인 초기화
	int c = int( 0 );	// 복사생성(복사초기화)
	int d = b;			// 복사초기화
	int e {};			// uniform initializtion의 디폴트 초기화
	//int f();			// 함수를 선언하는 동작, 초기화 X
	int g { 0 };		// uniform initializtion

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 11 12:01:55 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 변수 초기화 - uniform initializtion
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

// [문제] 두 변수의 값을 교환되도록 함수를 선언하고 정의하라

void change(int *a, int *b)
{
	int temp = *a;
	*a = *b;
	*b = temp;
}

int main()
{	
	int a { 1 };
	int b { 2 };

	// 함수 change를 호출하였다
	change( &a, &b );

	cout << a << ", " << b << endl;		// 2, 1 이라고 출력

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 11 12:11:19 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 변수 초기화 - uniform initializtion
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

// [문제] 두 변수의 값을 교환되도록 함수를 선언하고 정의하라

void change( int*, int* );

int main()
{	
	int a { 1 };
	int b { 2 };

	// 함수 change를 호출하였다
	change( &a, &b );

	cout << a << ", " << b << endl;		// 2, 1 이라고 출력

	save( "소스.cpp" );
}

void change( int* p, int* q )
{
	int temp { *p };
	*p = *q;
	*q = temp;
}


----------------------------------------------------------------------------
Wed Sep 11 12:12:13 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 변수 초기화 - uniform initializtion
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

// [문제] 두 변수의 값을 교환되도록 함수를 선언하고 정의하라

void change( int*, int* );		// 선언과 동시에 정의하지 않음

int main()
{	
	int a { 1 };
	int b { 2 };

	// 함수 change를 호출하였다
	change( &a, &b );

	cout << a << ", " << b << endl;		// 2, 1 이라고 출력

	save( "소스.cpp" );
}

void change( int* p, int* q )
{
	int temp { *p };
	*p = *q;
	*q = temp;
}


----------------------------------------------------------------------------
Wed Sep 11 12:19:00 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 변수 초기화 - uniform initializtion
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

// [문제] 두 변수의 값을 교환되도록 함수를 선언하고 정의하라

void change( int&, int& );		// 인티저 레퍼런스(reference)

int main()
{	
	int a { 1 };
	int b { 2 };

	// 함수 change를 호출하였다
	change( a, b );

	cout << a << ", " << b << endl;		// 2, 1 이라고 출력

	save( "소스.cpp" );
}

void change( int& p, int& q )
{
	int temp { p };
	p = q;
	q = temp;
}


----------------------------------------------------------------------------
Wed Sep 11 12:19:58 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 11 월 C++                           월56수34          (2주 2일)
//
// 변수 초기화 - uniform initializtion, RAII - 초기화는 자원을 확보할때 일어난다.
// 참조(reference) - 원본 객체의 alias
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

// [문제] 두 변수의 값을 교환되도록 함수를 선언하고 정의하라

void change( int&, int& );		// 인티저 레퍼런스(reference)

int main()
{	
	int a { 1 };
	int b { 2 };

	// 함수 change를 호출하였다
	change( a, b );

	cout << a << ", " << b << endl;		// 2, 1 이라고 출력

	save( "소스.cpp" );
}

void change( int& p, int& q )
{
	int temp { p };
	p = q;
	q = temp;
}


----------------------------------------------------------------------------
Mon Sep 16 13:52:06 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 변수 초기화 - uniform initializtion, RAII - 초기화는 자원을 확보할때 일어난다.
// 참조(reference) - 원본 객체의 alias
//-----------------------------------------------------------------------------

#include <iostream>
#include <random>
#include "save.h"
using namespace std;

// *와 &를 사용하는 이유 - 원격객체를 조작하기 위해

int main()
{
	int a[100];

	// [문제] a를 범위가 ( 1, 10,000,000 ) 랜덤값으로 채우자
	// 가장 작은 값과 큰 값을 찾아 화면에 출력하자

	// O(n) N에 비례한다. - 선형알고리즘

	default_random_engine dre;
	uniform_int_distribution<int> uni( 1, 10'000'000 );

	int max { 0 }, min { 10'000'000 };

	for( int& d : a )	// syntatic sugar의 일종 - 문법적인 편의 제공
		d = uni( dre );

	for( int d : a )	// 범위기반의 for (range-based for)
		cout << d << ' ';
	cout << endl;

	cout << max << ' ' << min << endl;
	
	// 큰 값을 찾기
	int dataMax = a[ 0 ];
	for( int d : a )
		if( dataMax < d )
			dataMax = d;

	cout << "가장 큰 값은 : " << dataMax << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep 16 13:53:14 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 변수 초기화 - uniform initializtion, RAII - 초기화는 자원을 확보할때 일어난다.
// 참조(reference) - 원본 객체의 alias
//-----------------------------------------------------------------------------

#include <iostream>
#include <random>
#include "save.h"
using namespace std;

// *와 &를 사용하는 이유 - 원격객체를 조작하기 위해

int main()
{
	int a[10];

	// [문제] a를 범위가 ( 1, 10,000,000 ) 랜덤값으로 채우자
	// 가장 작은 값과 큰 값을 찾아 화면에 출력하자

	// O(n) N에 비례한다. - 선형알고리즘

	default_random_engine dre;
	uniform_int_distribution<int> uni( 1, 10'000'000 );

	int max { 0 }, min { 10'000'000 };

	for( int& d : a )	// syntatic sugar의 일종 - 문법적인 편의 제공
		d = uni( dre );

	for( int d : a )	// 범위기반의 for (range-based for)
		cout << d << ' ';
	cout << endl;

	cout << max << ' ' << min << endl;
	
	// 작은 값을 찾기
	int dataMax = a[ 0 ];
	for( int d : a )
		if( dataMax > d )
			dataMax = d;

	cout << "가장 작은 값은 : " << dataMax << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep 16 14:07:06 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

void change( int&, int& );

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	// [문제] a를 오름차순(ascending order)으로 정렬하라

	// 1단계 - 가장 큰 값을 제일 오른쪽으로 이동시킨다.
	for( int i { 0 }; i < 10 - 1; ++i )
		if( a[ i ] > a[ i + 1 ] )
			change( a[ i ], a[ i + 1 ] );

	// 출력하면 10이 제일 오른쪽으로 간다.
	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}

void change( int& p, int& q )
{
	int temp { p };
	p = q;
	q = temp;
}


----------------------------------------------------------------------------
Mon Sep 16 14:10:04 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

void change( int&, int& );

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	// [문제] a를 오름차순(ascending order)으로 정렬하라

	// 1단계 - 가장 큰 값을 제일 오른쪽으로 이동시킨다.
	for( int i { 0 }; i < 10 - 1; ++i )
		if( a[ i ] > a[ i + 1 ] )
			change( a[ i ], a[ i + 1 ] );

	// 출력하면 10이 제일 오른쪽으로 간다.
	for( int d : a )
		cout << d << ' ';
	cout << endl;

	// 2단계 - 다음으로 큰 값을 오른쪽으로 이동시킨다.
	for( int i { 0 }; i < 10 - 2; ++i )
		if( a[ i ] > a[ i + 1 ] )
			change( a[ i ], a[ i + 1 ] );

	// 출력하면 9 , 10
	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}

void change( int& p, int& q )
{
	int temp { p };
	p = q;
	q = temp;
}


----------------------------------------------------------------------------
Mon Sep 16 14:12:28 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

void change( int&, int& );

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	// [문제] a를 오름차순(ascending order)으로 정렬하라

	for( int i { 1 }; i < 10 ; ++i )
		for ( int j {0} ; j < 10 - i ; ++j )
		if( a[ j ] > a[ j + 1 ] )
			change( a[ j ], a[ j + 1 ] );

	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}

void change( int& p, int& q )
{
	int temp { p };
	p = q;
	q = temp;
}


----------------------------------------------------------------------------
Mon Sep 16 14:33:32 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

void change( int&, int& );

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	// [문제] a를 오름차순(ascending order)으로 정렬하라

	for( int i { 0 }; i < 9; ++i )
		for( int j { 0 }; j < 9 - i; ++j )
		if( a[ j ] > a[ j + 1 ] )
			change( a[ j ], a[ j + 1 ] );

	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}

void change( int& p, int& q )
{
	int temp { p };
	p = q;
	q = temp;
}


----------------------------------------------------------------------------
Mon Sep 16 14:36:00 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

void change( int&, int& );

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	// [문제] a를 오름차순(ascending order)으로 정렬하라

	for( int i { 0 }; i < 9; ++i )
	{
		for( int j { 0 }; j < 9 - i; ++j )
			if( a[ j ] > a[ j + 1 ] )
				change( a[ j ], a[ j + 1 ] );
		// a를 출력
		for( int d : a )
			cout << d << ' ';
	}

	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}

void change( int& p, int& q )
{
	int temp { p };
	p = q;
	q = temp;
}


----------------------------------------------------------------------------
Mon Sep 16 14:36:13 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

void change( int&, int& );

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	// [문제] a를 오름차순(ascending order)으로 정렬하라

	for( int i { 0 }; i < 9; ++i )
	{
		for( int j { 0 }; j < 9 - i; ++j )
			if( a[ j ] > a[ j + 1 ] )
				change( a[ j ], a[ j + 1 ] );
		// a를 출력
		for( int d : a )
			cout << d << ' ';
		cout << endl;
	}

	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}

void change( int& p, int& q )
{
	int temp { p };
	p = q;
	q = temp;
}


----------------------------------------------------------------------------
Mon Sep 16 14:36:39 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

void change( int&, int& );

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	// [문제] a를 오름차순(ascending order)으로 정렬하라

	for( int i { 0 }; i < 9; ++i )
	{
		for( int j { 0 }; j < 9 - i; ++j )
			if( a[ j ] > a[ j + 1 ] )
				change( a[ j ], a[ j + 1 ] );
		// a를 출력
		for( int d : a )
			cout << d << ' ';
		cout << endl;
	}

	save( "소스.cpp" );
}

void change( int& p, int& q )
{
	int temp { p };
	p = q;
	q = temp;
}


----------------------------------------------------------------------------
Mon Sep 16 14:58:52 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

// 함수 포인터
int ascend( void*, void* );

int ascend( const void* a, const void* b )	// const - 메모리를 읽기 전용으로 사용
{
	return *( int* ) a - *( int* ) b;
}

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	int( *comp )( const void*, const void* ) = ascend;

	qsort( a, 10, sizeof( int ), comp );	// (자료구조 , 갯수 , 인자의 크기 , 함수의 번지) , ascend는 함수 포인터

	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep 16 15:04:47 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

// 함수 포인터
int ascend( void*, void* );

int ascend( const void* a, const void* b )	// const - 메모리를 읽기 전용으로 사용
{
	return *( int* ) a - *( int* ) b;		// a, b 순서 바꾸면 내림차순 
}

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	int( *comp )( const void*, const void* ) = ascend;

	qsort( a, 10, sizeof( int ), comp );	// (자료구조 , 갯수 , 인자의 크기 , 함수의 번지) , ascend는 함수 포인터

	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep 16 15:14:15 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

bool ascend( int ,int);

bool ascend(int a, int b )	// const - 메모리를 읽기 전용으로 사용
{
	return a < b;
}

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };
	
	auto comp = ascend;

	// [문제] 오름차순으로 a를 정렬하고 출력하자
	sort( begin( a ), end( a ), comp );
	
	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep 16 15:16:33 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

bool ascend( int ,int);

bool ascend(int a, int b )
{
	return a < b;
}

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };
	
	auto comp = ascend;

	// [문제] 오름차순으로 a를 정렬하고 출력하자
	sort( begin( a ), end( a ), comp );
	
	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep 16 15:16:45 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

bool ascend( int ,int);

bool ascend(int a, int b )
{
	return a > b;
}

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };
	
	auto comp = ascend;

	// [문제] 오름차순으로 a를 정렬하고 출력하자
	sort( begin( a ), end( a ), comp );
	
	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep 16 15:19:20 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	// [문제] 오름차순으로 a를 정렬하고 출력하자
	sort( begin( a ), end( a ), []( int a, int b ) {
		return a < b;
	});
	
	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Mon Sep 16 15:20:35 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 16 월 C++                           월56수34          (3주 1일)
//
// 정렬(sort) 
//  - 두 값을 서로 바꿀 수 있다.
//    그렇다면 데이터를 순서대로 정렬할 수 있다.
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	int a[ 10 ] { 10, 8, 6, 4, 2, 9, 7, 5, 3, 1 };

	// [문제] 오름차순으로 a를 정렬하고 출력하자
	sort( begin( a ), end( a ), []( int a, int b ) {	// [] - 람다
		return a < b;
	});
	
	for( int d : a )
		cout << d << ' ';
	cout << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 11:51:35 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	// 람다(lambda) - 이름없는 함수
	[]() {
		cout << "안녕, 난 람다야." << endl;
	};

	
	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 11:53:52 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	// 람다(lambda) - 이름없는 함수
	[]() {
		cout << "안녕, 난 람다야." << endl;
	}	();										// () 호출 연산자

	
	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 11:57:00 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	// 람다(lambda) - 이름없는 함수
	auto f = []() {
		cout << "안녕, 난 람다야." << endl;
	};

	cout << typeid( f ).name() << endl;
	
	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:00:39 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	// 정수 2개를 받아 합을 리턴하는 람다를 작성하고 인자 (2, 3)으로 호출하여 결과를 화면에 출력하라.

	auto f = [](int a, int b)
	{
		return a + b;
	};

	cout << f( 2, 3 ) << endl;
	
	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:04:47 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	// 정수 2개를 받아 합을 리턴하는 람다를 작성하고 인자 (2, 3)으로 호출하여 결과를 화면에 출력하라.

	auto f = [](int a, int b)
	{
		return a + b;
	};

	cout << f( 2, 3 ) << endl;

	cout << [](int a, int b){
			return a + b;
		}(2,3);
	
	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:05:35 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	// 정수 2개를 받아 합을 리턴하는 람다를 작성하고 인자 (2, 3)으로 호출하여 결과를 화면에 출력하라.

	auto f = [](int a, int b)
	{
		return a + b;
	};

	cout << f( 2, 3 ) << endl;

	cout << [](int a, int b){
			return a + b;
	}( 2, 3 ) << endl;
	
	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:18:02 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"
using namespace std;

int main()
{
	string sample { "the quick brown fox jumps over the lazy dog"s };

	for( int i = 0 ; i < sample.length(); ++i )
		cout << sample[ i ] << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:19:07 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"
using namespace std;

int main()
{
	string sample { "the quick brown fox jumps over the lazy dog"s };

	cout << sample << endl;
	for( int i = 0 ; i < sample.length(); ++i )
		cout << sample[ i ] << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:20:19 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"
using namespace std;

int main()
{
	string sample { "the quick brown fox jumps over the lazy dog"s };

	cout << sample << endl;

	for( char c : sample )
		cout << c << ' ';
	cout << endl;

	for( int i = 0 ; i < sample.length(); ++i )
		cout << sample[ i ] << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:25:47 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	string sample { "the quick brown fox jumps over the lazy dog"s };

	//[문제] sample을 오름차순으로 정렬하라

	sort( sample.begin(), sample.end() );

	cout << sample << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:29:31 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	string sample { "the quick brown fox jumps over the lazy dog"s };

	//[문제] sample을 오름차순으로 정렬하라

	sort( sample.begin(), sample.end(), []( char a, char b )
	{
		return a < b;
	});

	cout << sample << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:35:00 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <string>
#include <algorithm>
#include "save.h"
using namespace std;

int main()
{
	string sample { "the quick brown fox jumps over the lazy dog"s };

	//[문제] sample을 오름차순으로 정렬하라

	sort( begin(sample), end(sample) );

	cout << sample << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:51:23 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"
using namespace std;

// [문제] int 1'000'000 개를 random 값(1 ~ 1'000'000)으로 설정하라.
// 오름차순으로 정렬하라.
// 제일 큰 값을 찾아 화면에 출력하라.

int main()
{
	int a [ 100'000 ];

	default_random_engine dre;
	uniform_int_distribution<> uni( 1, 100'000 );

	for( int& d : a )
		d = uni( dre );

	sort( begin( a ), end( a ) );

	cout << "제일 큰 값 : " << a[100'000-1] << endl;

	save( "소스.cpp" );
}


----------------------------------------------------------------------------
Wed Sep 18 12:51:40 2019
----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// 2019. 9. 18 월 C++                           월56수34          (3주 2일)
//
// 람다
// 알고리즘 sort
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"
using namespace std;

// [문제] int 1'000'000 개를 random 값(1 ~ 1'000'000)으로 설정하라.
// 오름차순으로 정렬하라.
// 제일 큰 값을 찾아 화면에 출력하라.

int main()
{
	int a [ 100'000 ];

	default_random_engine dre;
	uniform_int_distribution<> uni( 1, 1'000'000 );

	for( int& d : a )
		d = uni( dre );

	sort( begin( a ), end( a ) );

	cout << "제일 큰 값 : " << a[100'000-1] << endl;

	save( "소스.cpp" );
}